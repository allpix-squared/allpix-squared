FROM ubuntu:latest
MAINTAINER Simon Spannagel <simon.spannagel@cern.ch>

SHELL ["/bin/bash", "-c"]

# Install basic build requirements
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata curl cmake g++ gcc binutils

# Install LCIO dependencies
RUN apt-get install -y zlib1g-dev

# Add layer for LCIO
ENV LCIO_VERSION 02-16-01

ENV LCIODIR="/opt/lcio"
ENV PATH="$LCIODIR/bin:$PATH"
ENV LD_LIBRARY_PATH="$LCIODIR/lib:$LD_LIBRARY_PATH"
ENV LIBPATH="$LCIODIR/lib:$LIBPATH"
ENV CMAKE_PREFIX_PATH="$LCIODIR:$CMAKE_PREFIX_PATH"

RUN mkdir -p ${LCIODIR}/{src,build} && \
    curl -o ${LCIODIR}/lcio.${LCIO_VERSION}.tar.gz \
            https://codeload.github.com/iLCSoft/LCIO/tar.gz/v${LCIO_VERSION} && \
    tar zxf ${LCIODIR}/lcio.${LCIO_VERSION}.tar.gz -C ${LCIODIR}/src && \
    rm -f ${LCIODIR}/lcio.${LCIO_VERSION}.tar.gz && \
    cd ${LCIODIR}/build && \
    cmake -DCMAKE_INSTALL_PREFIX=../ \
           ../src/LCIO-${LCIO_VERSION} && \
    make -j`grep -c processor /proc/cpuinfo` && \
    make install && \
    rm -rf ${LCIODIR}/{src,build}


# Install ROOT dependencies
RUN apt-get install -y dpkg-dev libx11-dev libxpm-dev libxft-dev libxext-dev libssl-dev python3 python3-dev python3-pip python3-tk python-is-python3

# Install helpful Python packages
RUN pip3 install --upgrade pip && \
    pip3 install numpy matplotlib scipy pandas

# Add layer for ROOT6
ENV ROOT6_VERSION 6.26.04

ENV ROOTSYS="/opt/root6"
ENV PATH="$ROOTSYS/bin:$PATH"
ENV LD_LIBRARY_PATH="$ROOTSYS/lib:$LD_LIBRARY_PATH"
ENV LIBPATH="$ROOTSYS/lib:$LIBPATH"
ENV PYTHONPATH="$ROOTSYS/lib:$PYTHONPATH"
ENV CMAKE_PREFIX_PATH="$ROOTSYS:$CMAKE_PREFIX_PATH"

RUN mkdir -p ${ROOTSYS}/{src,build} && \
    curl -o ${ROOTSYS}/root.${ROOT6_VERSION}.tar.gz \
            https://root.cern.ch/download/root_v${ROOT6_VERSION}.source.tar.gz && \
    tar zxf ${ROOTSYS}/root.${ROOT6_VERSION}.tar.gz -C ${ROOTSYS}/src && \
    rm -f ${ROOTSYS}/root.${ROOT6_VERSION}.tar.gz && \
    cd ${ROOTSYS}/build && \
    cmake -Dgdml=ON \
           -Dgenvector=ON \
           -Dmathmore=ON \
           -Dminuit2=ON \
           -Dthread=ON \
           -Dx11=OFF \
           -Dopengl=OFF \
           -Dtmva=OFF -Dtmva-cpu=OFF -Dtmva-pymva=OFF \
           -Dhttp=OFF \
           -Dwebgui=OFF \
           -Droot7=OFF \
           -Dfftw3=OFF \
           -Dfitsio=OFF \
           -Dclad=OFF \
           -Dspectrum=OFF \
           -Dvdt=OFF \
           -Dxrootd=OFF \
           -Droofit=OFF \
           -Ddataframe=OFF \
           -Dpython3=ON \
           -DPYTHON_EXECUTABLE=/usr/bin/python3 \
           -DCMAKE_INSTALL_PREFIX=../ \
           -DCMAKE_CXX_STANDARD=17 \
           ../src/root-${ROOT6_VERSION} && \
    make -j`grep -c processor /proc/cpuinfo` && \
    make install && \
    rm -rf ${ROOTSYS}/{src,build}


# Install Geant4 dependencies
RUN apt-get install -y libxerces-c-dev

# Add layer for Geant4
ENV GEANT4_VERSION 11.0.2

ENV GEANT4DIR="/opt/geant4"
ENV PATH="$GEANT4DIR/bin:$PATH"
ENV LD_LIBRARY_PATH="$GEANT4DIR/lib:$LD_LIBRARY_PATH"
ENV G4NEUTRONHPDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4NDL4.6"
ENV G4LEDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4EMLOW8.0"
ENV G4LEVELGAMMADATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/PhotonEvaporation5.7"
ENV G4RADIOACTIVEDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/RadioactiveDecay5.6"
ENV G4PARTICLEXSDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4PARTICLEXS4.0"
ENV G4PIIDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4PII1.3"
ENV G4REALSURFACEDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/RealSurface2.2"
ENV G4SAIDXSDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4SAIDDATA2.0"
ENV G4ABLADATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4ABLA3.1"
ENV G4INCLDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4INCL1.0"
ENV G4ENSDFSTATEDATA="$GEANT4DIR/share/Geant4-${GEANT4_VERSION}/data/G4ENSDFSTATE2.3"

RUN mkdir -p ${GEANT4DIR}/{src,build} && \
    curl -o ${GEANT4DIR}/geant4.${GEANT4_VERSION}.tar.gz \
            https://geant4-data.web.cern.ch/geant4-data/releases/source/geant4-v${GEANT4_VERSION}.tar.gz && \
    tar zxf ${GEANT4DIR}/geant4.${GEANT4_VERSION}.tar.gz -C ${GEANT4DIR}/src && \
    rm -f ${GEANT4DIR}/geant4.${GEANT4_VERSION}.tar.gz && \
    cd ${GEANT4DIR}/build && \
    cmake -DGEANT4_INSTALL_DATA=ON \
          -DGEANT4_USE_GDML=ON \
          -DGEANT4_USE_SYSTEM_CLHEP=OFF \
          -DGEANT4_BUILD_MULTITHREADED=ON \
          -DCMAKE_INSTALL_PREFIX=../ \
          -DGEANT4_BUILD_CXXSTD=17 \
          ../src/geant4-v${GEANT4_VERSION} && \
    make -j`grep -c processor /proc/cpuinfo` && \
    make install && \
    rm -rf ${GEANT4DIR}/{src,build} && \
    rm -rf ${GEANT4DIR}/share/Geant4-${GEANT4_VERSION_PATH}/examples

# Add layer for HepMC3
ENV HEPMC3_VERSION 3.2.5

ENV HEPMC3DIR="/opt/hepmc3"
ENV PATH="$HEPMC3DIR/bin:$PATH"
ENV LD_LIBRARY_PATH="$HEPMC3DIR/lib:$LD_LIBRARY_PATH"
ENV LIBPATH="$HEPMC3DIR/lib:$LIBPATH"
ENV CMAKE_PREFIX_PATH="$HEPMC3DIR:$CMAKE_PREFIX_PATH"

RUN mkdir -p ${HEPMC3DIR}/{src,build} && \
    curl -o ${HEPMC3DIR}/hepmc3.${HEPMC3_VERSION}.tar.gz \
            https://gitlab.cern.ch/hepmc/HepMC3/-/archive/${HEPMC3_VERSION}/HepMC3-${HEPMC3_VERSION}.tar.gz && \
    tar zxf ${HEPMC3DIR}/hepmc3.${HEPMC3_VERSION}.tar.gz -C ${HEPMC3DIR}/src && \
    rm -f ${HEPMC3DIR}/hepmc3.${HEPMC3_VERSION}.tar.gz && \
    cd ${HEPMC3DIR}/build && \
    cmake -DCMAKE_INSTALL_PREFIX=../ \
          -DHEPMC3_ENABLE_ROOTIO=ON \
          -DHEPMC3_ENABLE_PYTHON=ON \
           ../src/HepMC3-${HEPMC3_VERSION} && \
    make -j`grep -c processor /proc/cpuinfo` && \
    make install && \
    rm -rf ${HEPMC3DIR}/{src,build}

# Install Allpix Squared dependencies
RUN apt-get install -y libpqxx-dev postgresql-server-dev-all libeigen3-dev libboost-random-dev python3-lxml git

CMD ["bash"]
